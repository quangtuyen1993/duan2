// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.data.response;

import com.example.bookstory.dao.BookDAO;
import com.example.bookstory.service.BookApi;
import com.example.bookstory.service.FeedApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BookRepository_Factory implements Factory<BookRepository> {
  private final Provider<BookApi> bookApiProvider;

  private final Provider<FeedApi> feedApiProvider;

  private final Provider<BookDAO> bookDAOProvider;

  public BookRepository_Factory(Provider<BookApi> bookApiProvider,
      Provider<FeedApi> feedApiProvider, Provider<BookDAO> bookDAOProvider) {
    this.bookApiProvider = bookApiProvider;
    this.feedApiProvider = feedApiProvider;
    this.bookDAOProvider = bookDAOProvider;
  }

  @Override
  public BookRepository get() {
    return newInstance(bookApiProvider.get(), feedApiProvider.get(), bookDAOProvider.get());
  }

  public static BookRepository_Factory create(Provider<BookApi> bookApiProvider,
      Provider<FeedApi> feedApiProvider, Provider<BookDAO> bookDAOProvider) {
    return new BookRepository_Factory(bookApiProvider, feedApiProvider, bookDAOProvider);
  }

  public static BookRepository newInstance(BookApi bookApi, FeedApi feedApi, BookDAO bookDAO) {
    return new BookRepository(bookApi, feedApi, bookDAO);
  }
}
