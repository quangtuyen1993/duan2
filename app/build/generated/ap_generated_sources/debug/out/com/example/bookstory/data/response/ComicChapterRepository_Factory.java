// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.data.response;

import com.example.bookstory.dao.ContentComicDAO;
import com.example.bookstory.service.ComicChapterApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ComicChapterRepository_Factory implements Factory<ComicChapterRepository> {
  private final Provider<ComicChapterApi> comicChapterApiProvider;

  private final Provider<ContentComicDAO> contentComicDAOProvider;

  public ComicChapterRepository_Factory(Provider<ComicChapterApi> comicChapterApiProvider,
      Provider<ContentComicDAO> contentComicDAOProvider) {
    this.comicChapterApiProvider = comicChapterApiProvider;
    this.contentComicDAOProvider = contentComicDAOProvider;
  }

  @Override
  public ComicChapterRepository get() {
    return newInstance(comicChapterApiProvider.get(), contentComicDAOProvider.get());
  }

  public static ComicChapterRepository_Factory create(
      Provider<ComicChapterApi> comicChapterApiProvider,
      Provider<ContentComicDAO> contentComicDAOProvider) {
    return new ComicChapterRepository_Factory(comicChapterApiProvider, contentComicDAOProvider);
  }

  public static ComicChapterRepository newInstance(ComicChapterApi comicChapterApi,
      ContentComicDAO contentComicDAO) {
    return new ComicChapterRepository(comicChapterApi, contentComicDAO);
  }
}
