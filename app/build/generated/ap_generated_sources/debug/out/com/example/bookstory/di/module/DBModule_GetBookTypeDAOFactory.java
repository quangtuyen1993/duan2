// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.di.module;

import com.example.bookstory.dao.BookTypeDAO;
import com.example.bookstory.dao.DBLocal;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_GetBookTypeDAOFactory implements Factory<BookTypeDAO> {
  private final DBModule module;

  private final Provider<DBLocal> dbLocalProvider;

  public DBModule_GetBookTypeDAOFactory(DBModule module, Provider<DBLocal> dbLocalProvider) {
    this.module = module;
    this.dbLocalProvider = dbLocalProvider;
  }

  @Override
  public BookTypeDAO get() {
    return getBookTypeDAO(module, dbLocalProvider.get());
  }

  public static DBModule_GetBookTypeDAOFactory create(DBModule module,
      Provider<DBLocal> dbLocalProvider) {
    return new DBModule_GetBookTypeDAOFactory(module, dbLocalProvider);
  }

  public static BookTypeDAO getBookTypeDAO(DBModule instance, DBLocal dbLocal) {
    return Preconditions.checkNotNull(instance.getBookTypeDAO(dbLocal), "Cannot return null from a non-@Nullable @Provides method");
  }
}
