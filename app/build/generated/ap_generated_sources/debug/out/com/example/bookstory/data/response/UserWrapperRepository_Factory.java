// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.data.response;

import com.example.bookstory.service.UserWrapperApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserWrapperRepository_Factory implements Factory<UserWrapperRepository> {
  private final Provider<UserWrapperApi> userWrapperApiProvider;

  public UserWrapperRepository_Factory(Provider<UserWrapperApi> userWrapperApiProvider) {
    this.userWrapperApiProvider = userWrapperApiProvider;
  }

  @Override
  public UserWrapperRepository get() {
    return newInstance(userWrapperApiProvider.get());
  }

  public static UserWrapperRepository_Factory create(
      Provider<UserWrapperApi> userWrapperApiProvider) {
    return new UserWrapperRepository_Factory(userWrapperApiProvider);
  }

  public static UserWrapperRepository newInstance(UserWrapperApi userWrapperApi) {
    return new UserWrapperRepository(userWrapperApi);
  }
}
