// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.ui.main.fragment.home.readBook.viewpager;

import com.example.bookstory.data.response.ChapterRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReadBookPagerViewModel_Factory implements Factory<ReadBookPagerViewModel> {
  private final Provider<ChapterRepository> chapterRepositoryProvider;

  public ReadBookPagerViewModel_Factory(Provider<ChapterRepository> chapterRepositoryProvider) {
    this.chapterRepositoryProvider = chapterRepositoryProvider;
  }

  @Override
  public ReadBookPagerViewModel get() {
    return newInstance(chapterRepositoryProvider.get());
  }

  public static ReadBookPagerViewModel_Factory create(
      Provider<ChapterRepository> chapterRepositoryProvider) {
    return new ReadBookPagerViewModel_Factory(chapterRepositoryProvider);
  }

  public static ReadBookPagerViewModel newInstance(ChapterRepository chapterRepository) {
    return new ReadBookPagerViewModel(chapterRepository);
  }
}
