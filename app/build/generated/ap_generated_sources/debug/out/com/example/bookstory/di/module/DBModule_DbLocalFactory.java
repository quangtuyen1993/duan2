// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.di.module;

import android.app.Application;
import com.example.bookstory.dao.DBLocal;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_DbLocalFactory implements Factory<DBLocal> {
  private final DBModule module;

  private final Provider<Application> applicationProvider;

  public DBModule_DbLocalFactory(DBModule module, Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public DBLocal get() {
    return dbLocal(module, applicationProvider.get());
  }

  public static DBModule_DbLocalFactory create(DBModule module,
      Provider<Application> applicationProvider) {
    return new DBModule_DbLocalFactory(module, applicationProvider);
  }

  public static DBLocal dbLocal(DBModule instance, Application application) {
    return Preconditions.checkNotNull(instance.dbLocal(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
