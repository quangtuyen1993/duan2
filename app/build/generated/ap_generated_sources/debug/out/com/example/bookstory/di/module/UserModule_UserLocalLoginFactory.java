// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.di.module;

import android.app.Application;
import com.example.bookstory.vo.UserLocalLogin;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserModule_UserLocalLoginFactory implements Factory<UserLocalLogin> {
  private final UserModule module;

  private final Provider<Application> contextProvider;

  public UserModule_UserLocalLoginFactory(UserModule module,
      Provider<Application> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public UserLocalLogin get() {
    return userLocalLogin(module, contextProvider.get());
  }

  public static UserModule_UserLocalLoginFactory create(UserModule module,
      Provider<Application> contextProvider) {
    return new UserModule_UserLocalLoginFactory(module, contextProvider);
  }

  public static UserLocalLogin userLocalLogin(UserModule instance, Application context) {
    return Preconditions.checkNotNull(instance.userLocalLogin(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
