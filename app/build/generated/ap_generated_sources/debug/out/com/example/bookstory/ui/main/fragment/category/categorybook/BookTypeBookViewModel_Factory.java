// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.ui.main.fragment.category.categorybook;

import com.example.bookstory.data.response.BookRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BookTypeBookViewModel_Factory implements Factory<BookTypeBookViewModel> {
  private final Provider<BookRepository> bookRepositoryProvider;

  public BookTypeBookViewModel_Factory(Provider<BookRepository> bookRepositoryProvider) {
    this.bookRepositoryProvider = bookRepositoryProvider;
  }

  @Override
  public BookTypeBookViewModel get() {
    return newInstance(bookRepositoryProvider.get());
  }

  public static BookTypeBookViewModel_Factory create(
      Provider<BookRepository> bookRepositoryProvider) {
    return new BookTypeBookViewModel_Factory(bookRepositoryProvider);
  }

  public static BookTypeBookViewModel newInstance(BookRepository bookRepository) {
    return new BookTypeBookViewModel(bookRepository);
  }
}
