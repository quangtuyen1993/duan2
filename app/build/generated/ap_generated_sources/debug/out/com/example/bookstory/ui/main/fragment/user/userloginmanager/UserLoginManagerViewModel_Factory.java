// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.ui.main.fragment.user.userloginmanager;

import com.example.bookstory.data.response.UserWrapperRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserLoginManagerViewModel_Factory implements Factory<UserLoginManagerViewModel> {
  private final Provider<UserWrapperRepository> userRepositoryProvider;

  public UserLoginManagerViewModel_Factory(Provider<UserWrapperRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public UserLoginManagerViewModel get() {
    return newInstance(userRepositoryProvider.get());
  }

  public static UserLoginManagerViewModel_Factory create(
      Provider<UserWrapperRepository> userRepositoryProvider) {
    return new UserLoginManagerViewModel_Factory(userRepositoryProvider);
  }

  public static UserLoginManagerViewModel newInstance(UserWrapperRepository userRepository) {
    return new UserLoginManagerViewModel(userRepository);
  }
}
