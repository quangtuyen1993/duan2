// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.ui.main.fragment.category.category;

import com.example.bookstory.data.response.BookTypeRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BookTypeViewModel_Factory implements Factory<BookTypeViewModel> {
  private final Provider<BookTypeRepository> bookTypeRepositoryProvider;

  public BookTypeViewModel_Factory(Provider<BookTypeRepository> bookTypeRepositoryProvider) {
    this.bookTypeRepositoryProvider = bookTypeRepositoryProvider;
  }

  @Override
  public BookTypeViewModel get() {
    return newInstance(bookTypeRepositoryProvider.get());
  }

  public static BookTypeViewModel_Factory create(
      Provider<BookTypeRepository> bookTypeRepositoryProvider) {
    return new BookTypeViewModel_Factory(bookTypeRepositoryProvider);
  }

  public static BookTypeViewModel newInstance(BookTypeRepository bookTypeRepository) {
    return new BookTypeViewModel(bookTypeRepository);
  }
}
