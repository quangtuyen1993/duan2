// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.ui.comic;

import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ComicActivity_MembersInjector implements MembersInjector<ComicActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProvider.Factory> factoryProvider;

  public ComicActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<ComicActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    return new ComicActivity_MembersInjector(androidInjectorProvider, factoryProvider);}

  @Override
  public void injectMembers(ComicActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectFactory(instance, factoryProvider.get());
  }

  @InjectedFieldSignature("com.example.bookstory.ui.comic.ComicActivity.factory")
  public static void injectFactory(ComicActivity instance, ViewModelProvider.Factory factory) {
    instance.factory = factory;
  }
}
