// Generated by Dagger (https://dagger.dev).
package com.example.bookstory.data.response;

import com.example.bookstory.dao.ChapterDAO;
import com.example.bookstory.service.ChapterApi;
import com.example.bookstory.service.HistoryApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChapterRepository_Factory implements Factory<ChapterRepository> {
  private final Provider<ChapterApi> chapterApiProvider;

  private final Provider<ChapterDAO> chapterDAOProvider;

  private final Provider<HistoryApi> historyApiProvider;

  public ChapterRepository_Factory(Provider<ChapterApi> chapterApiProvider,
      Provider<ChapterDAO> chapterDAOProvider, Provider<HistoryApi> historyApiProvider) {
    this.chapterApiProvider = chapterApiProvider;
    this.chapterDAOProvider = chapterDAOProvider;
    this.historyApiProvider = historyApiProvider;
  }

  @Override
  public ChapterRepository get() {
    return newInstance(chapterApiProvider.get(), chapterDAOProvider.get(), historyApiProvider.get());
  }

  public static ChapterRepository_Factory create(Provider<ChapterApi> chapterApiProvider,
      Provider<ChapterDAO> chapterDAOProvider, Provider<HistoryApi> historyApiProvider) {
    return new ChapterRepository_Factory(chapterApiProvider, chapterDAOProvider, historyApiProvider);
  }

  public static ChapterRepository newInstance(ChapterApi chapterApi, ChapterDAO chapterDAO,
      HistoryApi historyApi) {
    return new ChapterRepository(chapterApi, chapterDAO, historyApi);
  }
}
